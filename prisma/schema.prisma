// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client"
  output        = "../generated/prisma"
  moduleFormat  = "esm"
  runtime       = "nodejs"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int       @id @default(autoincrement())
  nombre_apellido String?
  email           String    @unique
  contrase√±a      String
  activo          Boolean   @default(true)
  rol             Rol?      @default(USUARIO)
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt

  Tema Tema[]
  Post Post[]
}

model Carrera {
  id          Int      @id @default(autoincrement())
  nombre      String   @unique
  descripcion String?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  activa      Boolean?  @default(true)

  Tema Tema[]
}

model Tema {
  id        Int      @id @default(autoincrement())
  nombre    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  id          Int      @id @default(autoincrement())
  titulo      String
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  id_creador  Int
  creador     Usuario @relation(fields: [id_creador], references: [id])
  contenido   String
  id_carrera  Int
  carrera     Carrera  @relation(fields: [id_carrera], references: [id])
  fijado      Boolean  @default(false)
  cerrado     Boolean  @default(false)
  Post Post[]
}	

model Post {
  id         Int      @id @default(autoincrement())
  titulo     String
  contenido  String
  published  Boolean  @default(false)
  autor      Usuario  @relation(fields: [id_autor], references: [id])
  id_autor    Int
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  id_tema    Int
  tema       Tema     @relation(fields: [id_tema], references: [id])
}


enum Rol {
  ADMIN
  MODERADOR
  USUARIO
}
